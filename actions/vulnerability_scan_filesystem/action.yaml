name: Vulnerability Scanning
description: Scans the file system for vulnerabilities
inputs:
  scan_severity:
    description: The severity that will cause the action to report if a vulnerability at that level is detected. UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
    default: CRITICAL,HIGH
  failure_severity:
    description: 'The severity that will cause the action to fail if a vulnerability at that level is detected. UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
    default: CRITICAL,HIGH
  publish_vulnerabilities:
    description: If true, will attempt to publish the results to the GitHub security tab
    required: false
    default: 'true'
  slack_webhook:
    description: 'The Slack webhook URL for sending messages via incoming webhooks, configured for #dev-uid2-alarms channel'
    default: ''
runs:
  using: "composite"
  steps:
  - name: Checkout repo
    uses: actions/checkout@v4
    with:
      repository: IABTechLab/uid2-shared-actions
      ref: v2
      path: tmp-vulnerability-scan

  - name: Retrieve trivy-secret.yaml
    shell: bash
    run: |
      cp tmp-vulnerability-scan/trivy-secret.yaml ./trivy-secret.yaml
      rm -rf tmp-vulnerability-scan

  - name: Setup oras
    uses: oras-project/setup-oras@v1

  - name: Get current date
    id: date
    shell: bash
    run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

  - name: Check Cache for Databases
    id: cache-check
    uses: actions/cache@v4
    with:
      path: ${{ github.workspace }}/.cache/trivy
      key: cache-trivy-${{ steps.date.outputs.date }}

  - name: Download and extract the vulnerability DB
    if: ${{ !steps.cache-check.outputs.cache-hit }}
    shell: bash
    run: |
      mkdir -p $GITHUB_WORKSPACE/.cache/trivy/db
      oras pull ghcr.io/aquasecurity/trivy-db:2
      tar -xzf db.tar.gz -C $GITHUB_WORKSPACE/.cache/trivy/db
      rm db.tar.gz

  - name: Download and extract the Java DB
    if: ${{ !steps.cache-check.outputs.cache-hit }}
    shell: bash
    run: |
      mkdir -p $GITHUB_WORKSPACE/.cache/trivy/java-db
      oras pull ghcr.io/aquasecurity/trivy-java-db:1
      tar -xzf javadb.tar.gz -C $GITHUB_WORKSPACE/.cache/trivy/java-db
      rm javadb.tar.gz

  - name: Cache DBs
    uses: actions/cache/save@v4
    if: ${{ !steps.cache-check.outputs.cache-hit }}
    with:
      path: ${{ github.workspace }}/.cache/trivy
      key: cache-trivy-${{ steps.date.outputs.date }}

  - name: Generate Trivy vulnerability scan report
    uses: aquasecurity/trivy-action@0.26.0
    if: inputs.publish_vulnerabilities == 'true'
    with:
      scan-type: 'fs'
      format: 'sarif'
      exit-code: '0'
      ignore-unfixed: true
      severity: ${{ inputs.scan_severity }}
      output: 'trivy-results.sarif'
      hide-progress: true
    env:
      TRIVY_SKIP_DB_UPDATE: true
      TRIVY_SKIP_JAVA_DB_UPDATE: true

  - name: Upload Trivy scan report to GitHub Security tab
    uses: github/codeql-action/upload-sarif@v3
    if: inputs.publish_vulnerabilities == 'true'
    with:
      sarif_file: 'trivy-results.sarif'

  - name: Test with Trivy vulnerability scanner
    id: trivy-scan
    uses: aquasecurity/trivy-action@0.26.0
    with:
      scan-type: 'fs'
      format: 'table'
      exit-code: '1'
      ignore-unfixed: true
      severity: ${{ inputs.failure_severity }}
      hide-progress: true
    env:
      TRIVY_SKIP_DB_UPDATE: true
      TRIVY_SKIP_JAVA_DB_UPDATE: true
    continue-on-error: true

  - name: Test for echo
    if: always()
    env:
      SLACK_COLOR: danger
      SLACK_MESSAGE: "test description3 +  ${{ steps.trivy-scan.outputs}}"
      SLACK_TITLE: "${{ steps.trivy-scan.outputs }} + ${{ steps.trivy-scan.outcome }}"
      SLACK_WEBHOOK: ${{ inputs.slack_webhook }}
    uses: rtCamp/action-slack-notify@v2
    run: |
      echo '${{ toJSON(steps.trivy-scan) }}'

  - name: Check for failure
    if: ${{ steps.trivy-scan.conclusion == 'failure' && inputs.slack_webhook != '' }}
    env:
      SLACK_COLOR: danger
      SLACK_MESSAGE: 'test description2'
      SLACK_TITLE: Test title 2
      SLACK_WEBHOOK: ${{ inputs.slack_webhook }}
    uses: rtCamp/action-slack-notify@v2

  - name: fail the workflow if fails
    if: ${{ steps.trivy-scan.conclusion == 'failure' }}
    shell: bash
    run: |
      echo "Failing the workflow due to vulnerability scan failure"
      exit 1
