name: Shared publish to Docker
description: Shared action for publish image to Docker

inputs:
  new_version:
    description: The new version number to publish for the docker repo
    required: true
  image_tag:
    description: The image tag used to extract metadata for Docker
    required: true
  not_snapshot:
    description: True if the release type is not a snapshot or pre-release build
    default: 'false'
  github_token:
    description: The github token to login to Docker container
    required: true
  docker_file:
    description: The Dockerfile used to build and publish Docker image
    default: ''
  publish_vulnerabilities:
    description: If true, will attempt to publish any vulnerabilities to GitHub. Defaults to true. Set to false for private repos.
    default: 'true'
  docker_image_name:
    description: The docker image name
    required: true
  docker_registry:
    description: The docker registry
    required: true
  docker_context:
    description: The docker context
    default: .
  scan_type:
    description: The scan-type for aquasecurity/trivy-action action. Default to a fs scan.
    default: fs
  slack_webhook:
    description: 'The Slack webhook URL for sending messages via incoming webhooks, configured for #dev-uid2-alarms channel'
    required: true

outputs:
  tags:
    description: The docker image tags
    value: ${{ steps.meta.outputs.tags }}

runs:
  using: "composite"

  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Docker container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.docker_registry }}/${{ inputs.docker_image_name }}
        tags: |
          type=raw,value=${{ inputs.image_tag }}
          type=raw,value=${{ inputs.not_snapshot == 'true' && 'latest' || '' }}

    - name: Extract First Image Tag
      id: extractImageTag
      shell: bash
      run: |
        FIRST_TAG=${DOCKER_METADATA_OUTPUT_TAGS%%$'\n'*}
        echo "firstTag=$FIRST_TAG" >> $GITHUB_OUTPUT

    - name: Build and export to Docker
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.docker_file }}
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          JAR_VERSION=${{ inputs.new_version }}
          IMAGE_VERSION=${{ inputs.new_version }}

    - name: Vulnerability scan
      uses: IABTechLab/uid2-shared-actions/actions/vulnerability_scan@ccm-UID2-4528-report-faillures-on-scheduled-vulnerability-detection-runs
      with:
        publish_vulnerabilities: ${{ inputs.publish_vulnerabilities }}
        failure_severity: CRITICAL
        scan_severity: CRITICAL,HIGH
        image_ref: ${{ steps.extractImageTag.outputs.firstTag }}
        scan_type: ${{ inputs.scan_type }}
        slack_webhook: ${{ inputs.slack_webhook }}

    - name: Push to Docker
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.docker_file }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          JAR_VERSION=${{ inputs.new_version }}
          IMAGE_VERSION=${{ inputs.new_version }}
