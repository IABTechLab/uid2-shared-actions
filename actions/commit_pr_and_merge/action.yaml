name: Commit, create PR, and merge it
inputs:
  message:
    description: 'Message for commit and PR title'
    required: false
    default: 'Automated update'
  tag:
    description: 'If provided, this tag is applied to the commit'
    required: false
  add:
    description: 'Comma- or newline-separated list of paths to add. If omitted, all new and modified files will be added.'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - name: Commit to new branch
      uses: EndBug/add-and-commit@v9
      id: create-branch-and-commit
      with:
        message: '[CI Pipeline] ${{ inputs.message }}'
        author_name: Release Workflow
        author_email: unifiedid-admin+release@thetradedesk.com
        new_branch: ci-${{ github.sha }}
        add: ${{ inputs.add }}
        
    - name: Create PR
      uses: actions/github-script@v7
      id: create-pr
      with:
        script: |
          const newPr = (await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[CI Pipeline] ${{ inputs.message }}',
            head: 'ci-${{ github.sha }}',
            base: '${{ github.ref_name }}',
            body: '[CI Pipeline] Automated update'
          })).data;
          core.setOutput('pull-request-url', newPr.html_url);
          core.setOutput('pull-request-number', newPr.number);

    - name: Merge PR
      run: gh pr merge $PR_URL --delete-branch $MERGE_PR_STRATEGY
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        PR_URL: ${{ steps.create-pr.outputs.pull-request-url }}
        MERGE_PR_STRATEGY: ${{github.ref_protected == true && '--merge' || '--rebase' }}  
    
    - name: Tag commit
      uses: actions/github-script@v7
      if: ${{ inputs.tag }}
      with:
        script: |
          const pr = (await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create-pr.outputs.pull-request-number }}
          })).data;
          console.log(`Creating tag refs/tags/${{ inputs.tag }} pointing at commit SHA ${pr.merge_commit_sha}`);
          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ inputs.tag }}',
            sha: pr.merge_commit_sha
          });