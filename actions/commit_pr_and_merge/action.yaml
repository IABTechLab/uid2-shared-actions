name: Commit, create PR, and merge it
description: Commits changes, creates PR with that commit, and merges the PR

inputs:
  message:
    description: Message for commit and PR title
    required: false
    default: Automated update
  tag:
    description: If provided, this tag is applied to the commit
    required: false
    default: ''
  add:
    description: Comma- or newline-separated list of paths to add
    required: true
  base_branch:
    description: The base branch we want to merge into
    type: string
    default: ''
  admin_access:
    description: Allow merging PR with `--admin` flag
    type: boolean
    required: false
    default: false
  github_token:
    description: The github token used to merge PR
    type: string
    required: false
    default: ''
outputs:
  git_tag_or_hash: 
    description: The git tag (or hash if no tag provided) of the merge commit
    value: ${{ steps.tag-commit.outcome == 'success' && steps.tag-commit.outputs.commit_tag || steps.get-commit-sha.outputs.commit_sha }}
  commit_sha:
    description: The git hash of the merge commit
    value: ${{ steps.get-commit-sha.outputs.commit_sha }}

runs:
  using: "composite"

  steps:
    - name: Check for changes
      id: changes
      shell: bash
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes_exist=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit to new branch
      uses: EndBug/add-and-commit@v9
      if: steps.changes.outputs.changes_exist == 'true'
      id: create-branch-and-commit
      with:
        message: '[CI Pipeline] ${{ inputs.message }}'
        author_name: Release Workflow
        author_email: unifiedid-admin+release@thetradedesk.com
        new_branch: ci-${{ github.sha }}
        add: ${{ inputs.add }}
        
    - name: Create PR
      uses: actions/github-script@v7
      if: steps.changes.outputs.changes_exist == 'true'
      id: create-pr
      with:
        script: |
          const newPr = (await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[CI Pipeline] ${{ inputs.message }}',
            head: 'ci-${{ github.sha }}',
            base: '${{ inputs.base_branch == '' && github.ref_name || inputs.base_branch }}',
            body: '[CI Pipeline] Automated update'
          })).data;
          core.setOutput('pull-request-url', newPr.html_url);
          core.setOutput('pull-request-number', newPr.number);

    - name: Merge PR
      run: gh pr merge $PR_URL --delete-branch $MERGE_PR_STRATEGY $ADMIN_ACCESS
      if: steps.changes.outputs.changes_exist == 'true'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token == '' && github.token || inputs.github_token }}
        PR_URL: ${{ steps.create-pr.outputs.pull-request-url }}
        MERGE_PR_STRATEGY: ${{ github.ref_protected == 'true' && '--merge' || '--rebase' }}
        ADMIN_ACCESS: ${{ inputs.admin_access == 'true' && '--admin' || '' }}

    - name: Test
      shell: bash
      run: |
        echo ${{ inputs.tag }}
        echo ${{ inputs.tag != '' }}
        echo ${{ github.event.inputs.tag }}
        echo ${{ github.event.inputs.tag != '' }}
        echo ${{ steps.changes.outputs.changes_exist }}
    
    - name: Tag commit
      uses: actions/github-script@v7
      id: tag-commit
      if: ${{ inputs.tag != '' && steps.changes.outputs.changes_exist == 'true' }}
      with:
        script: |
          const pr = (await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create-pr.outputs.pull-request-number }}
          })).data;
          console.log(`Creating tag refs/tags/${{ inputs.tag }} pointing at commit SHA ${pr.merge_commit_sha}`);
          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ inputs.tag }}',
            sha: pr.merge_commit_sha
          });
          core.setOutput('commit_tag', '${{ inputs.tag }}');

    - name: Get commit SHA
      uses: actions/github-script@v7
      id: get-commit-sha
      if: steps.changes.outputs.changes_exist == 'true'
      with:
        script: |
          const pr = (await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create-pr.outputs.pull-request-number }}
          })).data;
          console.log(`Returning commit SHA ${pr.merge_commit_sha}`);
          core.setOutput('commit_sha', pr.merge_commit_sha);

    - name: Print outputs
      uses: actions/github-script@v7
      if: ${{ inputs.tag != '' && steps.changes.outputs.changes_exist == 'true' }}
      with:
        script: |
          console.log('Result', '${{ steps.tag-commit.outcome }}');
          console.log('Commit tag', '${{ steps.tag-commit.outputs.commit_tag }}');
          console.log('Commit sha', '${{ steps.get-commit-sha.outputs.commit_sha }}');