name: Shared Pipeline to build and publish JAR Packages to Maven Repos
on:
  workflow_call:
    inputs:
      release_type:
        description: The type of version number to return. Must be one of [Snapshot, Patch, Minor or Major]
        required: true
        type: string
      publish_to_maven:
        description: 'True to publish the artifacts to maven repository, false to skip the step'
        default: true
        required: false
        type: boolean
      java_version:
        type: string
        default: '11'
      publish_vulnerabilities:
        type: string
        default: 'true'
      working_dir:
        description: The path to the directory for which the version should be determined.
        type: string
        default: '.'
      vulnerability_failure_severity:
        description: The severity to fail the workflow if such vulnerability is detected. DO NOT override it unless a Jira ticket is raised. Must be one of ['CRITICAL', 'CRITICAL,HIGH' or 'CRITICAL,HIGH,MEDIUM'] (without space in between).
        type: string
        default: 'CRITICAL,HIGH'
 
env:
  IS_RELEASE: ${{ (inputs.release_type == 'Major' || inputs.release_type == 'Minor' || inputs.release_type == 'Patch') && (github.event.repository.default_branch == github.ref_name ) }}
  REPO: ${{ github.event.repository.name }}

jobs:
  release:
    name: ${{ ((inputs.release_type == 'Major' || inputs.release_type == 'Minor' || inputs.release_type == 'Patch') && (github.event.repository.default_branch == github.ref_name )) && 'Create Release' || 'Publish Pre-release' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      security-events: write
      packages: write
    steps:
      - name: Show Context
        run: |
          printenv
          echo "$GITHUB_CONTEXT"
        shell: bash
        env: 
            GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java_version }}

      - name: Set version number
        id: version
        uses: IABTechLab/uid2-shared-actions/actions/version_number@tjm-UID2-1405-remove-hash-from-version
        with:
          type: ${{ inputs.release_type }}
          branch_name: ${{ github.ref }}
          working_dir: ${{ inputs.working_dir }}

      - name: Update pom.xml
        run: |
          current_version=$(grep -o '<version>.*</version>' ${{ inputs.working_dir }}/pom.xml | head -1 | sed 's/<version>\(.*\)<\/version>/\1/')
          new_version=${{ steps.version.outputs.new_version }} 
          sed -i "s/$current_version/$new_version/g" ${{ inputs.working_dir }}/pom.xml
          echo "Version number updated from $current_version to $new_version"

