name: Shared Validation of Docker image
on:
  workflow_call:
    inputs:
      failure_severity:
        description: The severity to fail the workflow if such vulnerability is detected. DO NOT override it unless a Jira ticket is raised. Must be one of ['CRITICAL', 'CRITICAL,HIGH' or 'CRITICAL,HIGH,MEDIUM'] (without space in between).
        required: false
        default: 'HIGH,CRITICAL'
        type: string
      fail_on_error:
        description: 'If true, will fail the build if vulnerabilities are found'
        default: true
        type: boolean
      cloud_provider:
        description: 'Must be one of [aws, gcp, azure, default]'
        required: false
        default: 'default'
        type: string
      java_version:
        type: string
        default: '11'
      publish_vulnerabilities:
        description: If true, will attempt to publish the results to the GitHub security tab
        type: boolean
        default: true
      skip_tests:
        description: If true, will skip tests when packaging JAR. Defaults to false. Set to true for test-only repos.
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-publish-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      packages: write
    outputs:
      jar_version: ${{ steps.package.outputs.jar_version }}

    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0

      - name: Restore timestamps
        uses: thetradedesk/git-restore-mtime-action@v1.3

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java_version }}

      - name: Package JAR
        id: package
        shell: bash
        run: |
          if [[ "${{ inputs.skip_tests }}" == "false" ]]; then
            mvn -B package -P ${{ inputs.cloud_provider }}
          else
            mvn -B package -P ${{ inputs.cloud_provider }} -DskipTests
          fi
          echo "jar_version=$(mvn help:evaluate -Dexpression=project.version | grep -e '^[1-9][^\[]')" >> $GITHUB_OUTPUT
          echo "git_commit=$(git show --format="%h" --no-patch)" >> $GITHUB_OUTPUT

      - name: Log in to the Docker container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ steps.package.outputs.jar_version }}-,suffix=-${{ inputs.cloud_provider }},format=short

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAR_VERSION=${{ steps.package.outputs.jar_version }}
            IMAGE_VERSION=${{ steps.package.outputs.jar_version }}-${{ steps.package.outputs.git_commit }}

      - name: Vulnerability Scan
        uses: IABTechLab/uid2-shared-actions/actions/vulnerability_scan@v3
        with:
          scan_severity: HIGH,CRITICAL
          failure_severity: ${{ inputs.failure_severity }}
          publish_vulnerabilities: ${{ inputs.publish_vulnerabilities }}
          image_ref: ${{ steps.meta.outputs.tags }}
          scan_type: image
          full_report: 'true'
