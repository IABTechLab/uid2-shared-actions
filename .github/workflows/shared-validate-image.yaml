name: Shared Validation of Docker image
on:
  workflow_call:
    inputs:
      failure_severity:
        description: 'Must be one of CRITICAL, HIGH, MEDIUM'
        required: false
        default: 'HIGH'
        type: string
      fail_on_error:
        description: 'If true, will fail the build if vulnerabilities are found'
        default: true
        type: boolean
      cloud_provider:
        description: 'Must be one of [aws, gcp, azure, default]'
        required: false
        default: 'default'
        type: string
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-publish-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      packages: write
    outputs:
      jar_version: ${{ steps.package.outputs.jar_version }}
    steps:
      - name: Checkout Full history
        uses: actions/checkout@v3
        with:
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0

      - name: Restore Timestamps
        uses: thetradedesk/git-restore-mtime-action@v1.2

      - name: Package Jar 
        id: package
        shell: bash
        run: |
          mvn -B package -P ${{ inputs.cloud_provider }} 
          echo "jar_version=$(mvn help:evaluate -Dexpression=project.version | grep -e '^[1-9][^\[]')" >> $GITHUB_OUTPUT
          echo "git_commit=$(git show --format="%h" --no-patch)" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ steps.package.outputs.jar_version }}-,suffix=-${{ inputs.cloud_provider }},format=short

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAR_VERSION=${{ steps.package.outputs.jar_version }}
            IMAGE_VERSION=${{ steps.package.outputs.jar_version }}-${{ steps.package.outputs.git_commit }}

      - name: Run Trivy vulnerability scanner and report to GitHub
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: ${{ inputs.failure_severity }}
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Local vulnerability scanner for MEDIUM,HIGH,CRITICAL for reporting
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'MEDIUM,HIGH,CRITICAL'
          hide-progress: true

      - name: Local vulnerability scanner fail for given severity
        uses: aquasecurity/trivy-action@master
        if: inputs.fail_on_error
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: ${{ inputs.failure_severity }}
          hide-progress: true
