name: Shared Publish to ECR
on:
  workflow_call:
    inputs:
      release_type:
        description: The type of version number to return. Must be one of [Snapshot, Patch, Minor or Major]
        required: true
        type: string
      java_version:
        type: string
        default: '17'
      aws_account_id:
        description: The AWS Account Id where the repo is
        type: string
        required: true
      ecr_name:
        description: The name of the ECR
        type: string
        required: true

env:
  AWS_REGION: us-east-2

jobs:
  build-publish-docker:
    name: Build docker image for ECR
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
        fetch-depth: 0
    - name: Restore timestamps
      uses: thetradedesk/git-restore-mtime-action@v1.2

    - name: Set version number
      id: version
      uses: IABTechLab/uid2-shared-actions/actions/version_number@main
      with:
        type: ${{ inputs.release_type }}
        branch_name: ${{ github.ref }}
        short_name: 'Yes'

    - name: Update pom.xml
      run: |
        current_version=$(grep -o '<version>.*</version>' pom.xml | head -1 | sed 's/<version>\(.*\)<\/version>/\1/')
        new_version=${{ steps.version.outputs.new_version }} 
        sed -i "0,/$current_version/s//$new_version/" pom.xml
        echo "Version number updated from $current_version to $new_version"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/github-runner-for-uid2-lambda
    - run: aws sts get-caller-identity

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java_version }}
    
    - name: Build Package
      run: |
        mvn -B compile dependency:copy-dependencies -D"includeScope=runtime"

    - name: Commit pom.xml and version.json
      uses: IABTechLab/uid2-shared-actions/actions/commit_pr_and_merge@main
      with:
        add: 'pom.xml,version.json'
        message: 'Released ${{ inputs.release_type }} version: ${{ steps.version.outputs.new_version }}'

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      env: 
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_name }}
        tags: |
          type=raw,value=${{ steps.version.outputs.new_version }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v3
      with:
        context: .
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          JAR_VERSION=${{ steps.version.outputs.new_version }}
          IMAGE_VERSION=${{ steps.version.outputs.new_version }}
  
    - name: Push to Docker
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

